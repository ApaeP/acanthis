body.light {
  font-family: 'Karla', sans-serif;
  background-color: hsla(0, 0%, 100%, 1);
  color: hsla(0, 0%, 0%, 1);
}
body.dark {
  background-color: hsla(0, 0%, 16%, 1);
  color: hsla(0, 0%, 80%, 1);
}

$themes: (
  light: (

    logo: url(image-path('LOGO-LIGHT.png')),
    color-1: hsla(0, 0%, 0%, 1),
    color-1-hover: hsla(0, 0%, 15%, 1),
    color-2: hsla(0, 0%, 10%, 1),
    color-2-hover: hsla(0, 0%, 25%, 1),
    background-color-main: hsla(0, 0%, 100%, 1),
    background-color-elements: hsla(0, 0%, 99%, 1),
    background-color-elements-hover: hsla(0, 0%, 89%, 1)

  ),
  dark: (

    logo: url(image-path('LOGO-DARK.png')),
    color-1: hsla(0, 0%, 80%, 1),
    color-1-hover: hsla(0, 0%, 65%, 1),
    color-2: hsla(0, 0%, 75%, 1),
    color-2-hover: hsla(0, 0%, 60%, 1),
    background-color-main: hsla(0, 0%, 15%, 1),
    background-color-elements: hsla(0, 0%, 12%, 1),
    background-color-elements-hover: hsla(0, 0%, 22%, 1)

  ),
);

$theme-map: null;
@mixin themed() {
  @each $theme, $map in $themes {
    .sass-theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}


